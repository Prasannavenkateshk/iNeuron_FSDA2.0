use database demo1;

CREATE OR REPLACE TABLE  PV_SALES_DATA
(order_id VARCHAR(100) PRIMARY KEY,
order_date STRING,
ship_date STRING,
ship_mode VARCHAR(100),
customer_name VARCHAR(500),
segment VARCHAR(100),
state VARCHAR(100),
country VARCHAR(100),
market VARCHAR(100),
region VARCHAR(100),
product_id VARCHAR(100),
category VARCHAR(100),
sub_category VARCHAR(100),
product_name VARCHAR(500),
sales NUMBER(12,2),
Quantity NUMBER(12,2),
discount  NUMBER(12,2),
profit  NUMBER(12,2),
shipping_cost  NUMBER(12,2),
order_priority VARCHAR(100),
year INT);

--1--CREATING THE TABLE AND LOADING THE DATA AND SETTING THE PRIMARY KEY--

DESCRIBE TABLE PV_SALES_DATA; --TO DESCRIBE THE DATA--

SELECT * FROM PV_SALES_DATA; --TO GET OR FETCH ALL THE DATA FROM THE TABLE--

--2--Change the Primary key to Order Id Column For the table.--
ALTER TABLE PV_SALES_DATA
DROP PRIMARY KEY;

ALTER TABLE PV_SALES_DATA
ADD PRIMARY KEY(ORDER_ID);


--3--ORDER DATE/SHIP DATE WHICH DATATYPE?--
CREATE OR REPLACE TABLE PV_SALES_DATA AS
SELECT*,
CAST(ORDER_DATE AS DATE)AS ORDER_DATE2
FROM PV_SALES_DATA;

CREATE OR REPLACE TABLE PV_SALES_DATA AS
SELECT*,
TO_CHAR(DATE(SHIP_DATE,'DD-MM-YYYY'),'YYYY-MM-DD') AS SHIP_DATE2
FROM PV_SALES_DATA;

--4--EXTACT THE LAST NUMBER AFTER THE - AND CREATE OTHER COLUMN AND UPDATE IT--

CREATE OR REPLACE TABLE PV_SALES_DATA AS
SELECT*, REGEXP_SUBSTR(ORDER_ID,'[[:digit:]]+',1,2) AS ORDER_EXTRACT
from PV_SALES_DATA;

--5--FLAG ,IF DISCOUNT IS GREATER THEN 0 THEN  YES ELSE FALSE AND PUT IT IN NEW COLUMN FRO EVERY ORDER ID--
CREATE OR REPLACE TABLE PV_SALES_DATA AS
SELECT *,
      CASE
        WHEN DISCOUNT>0 THEN 'Yes'
        ELSE 'NO'
      END AS DISCOUNT_FLAG
FROM PV_SALES_DATA;
      
--6-FIND OUT HOW MUCH DAYS TAKEN FOR EACH ORDER TO PROCESS FOR THE SHIPMENT FOR EVERY ORDER ID.--

CREATE OR REPLACE TABLE PV_SALES_DATA AS
SELECT*,
DATEDIFF('days',ORDER_DATE2,SHIP_DATE2) as PROCESS_DAYS
FROM PV_SALES_DATA;

--7--FLAG THE PROCESS DAY AS BY RATING IF IT TAKES LESS OR EQUAL 3  DAYS MAKE 5,LESS OR EQUAL THAN 6 DAYS BUT MORE THAN 3 MAKE 4,LESS THAN 10 BUT MORE THAN 6 MAKE 3,MORE THAN 10 MAKE IT 2 FOR EVERY ORDER ID--

CREATE OR REPLACE TABLE PV_SALES_DATA AS
SELECT*, 
    CASE
       WHEN PROCESS_DAYS <=3 THEN 5
       WHEN PROCESS_DAYS BETWEEN 4 AND 6 THEN 4
       WHEN PROCESS_DAYS BETWEEN 7 AND 10 THEN 3
       ELSE 2
     END AS RATING
FROM PV_SALES_DATA;

---SNOWFLAKE ASSIGNMENT FROM InEURON-FSDA2.0---
  
